#include<Wire.h>
#include<SPI.h>
#include<Adafruit_GFX.h>
#include<Adafruit_SSD1306.h>

#define fsr_pin A0

const int ledCount = 10; // the number of LEDs in the bar graph
int ledPins[] = { 2, 3, 4, 5, 6, 7, 8, 9, 10, 12};
#define fsr_pin A0

#define OLED_MOSI  11 //D1
#define OLED_CLK  12 //D0
#define OLED_DC  9 //DC
#define OLED_CS  8 //CS
#define OLED_RESET  10 //RES
Adafruit_SSD1306 display( OLED_MOSI, OLED_CLK, OLED_DC, OLED_RESET, OLED_CS);

int logo_now = 1;

static const unsigned char PROGMEM Logo1[] = {
  B00000000, B00000000, B00000000, B00000000, B00000000, B00000000, B00000000, B00000000, B00000000, B00000000, B00000000, B00000000, B00000000, B00000000, B00000000, B00000000, 
  B00000000, B00000000, B00000001, B00000000, B00000000, B00000000, B00000000, B00000000, B00000000, B00000000, B00001100, B00000000, B00000000, B00000000, B00000000, B00000000, 
  B00000000, B00000000, B00000011, B10000000, B00011111, B11100000, B00000000, B00000000, B00000000, B00000000, B00011110, B00000000, B00000000, B00000000, B00000000, B00000000, 
  B00000000, B00000000, B00000011, B10000000, B11111111, B11110000, B00010000, B00000000, B00000000, B00000000, B00001111, B00000000, B00000000, B00000000, B00000000, B00000000, 
  B00000000, B00000000, B00000011, B10000011, B11111111, B11111000, B00111000, B00111111, B11111000, B00000000, B00000111, B00011000, B00000000, B00000000, B00000000, B00000000, 
  B00000000, B00000000, B00000011, B10000111, B11110000, B11111000, B01111000, B01111111, B11111100, B00000000, B00000111, B10111100, B00000000, B00000000, B00000000, B00000000, 
  B00000000, B00000000, B00001111, B10000111, B10000001, B11100000, B01111000, B00111111, B11111110, B00000000, B00000011, B11111111, B00000000, B00000000, B00000000, B00000000, 
  B00000000, B00000000, B00011111, B10000111, B00000001, B11100000, B11110000, B00111100, B00001111, B00000000, B00000011, B11111111, B10000000, B00000000, B00000000, B00000000, 
  B00000000, B00000000, B01111111, B10000111, B00000011, B11000001, B11100000, B00011100, B00000111, B00000000, B00000011, B11110111, B11000000, B00000000, B00000000, B00000000, 
  B00000000, B00000000, B11111111, B10000111, B00001111, B11000001, B11100000, B00011110, B00000111, B00000000, B00000011, B11000011, B11000000, B00000000, B00000000, B00000000, 
  B00000000, B00000000, B11110011, B10000111, B11111111, B10000011, B11000000, B00001110, B00000111, B00000000, B00000001, B10000001, B11000000, B00000000, B00000000, B00000000, 
  B00000000, B00000001, B11100001, B10000011, B11111110, B00000111, B10000000, B00001111, B10000111, B00000000, B00000000, B00000001, B11000000, B00000000, B00000000, B00000000, 
  B00000000, B00000001, B11000000, B00000001, B11111100, B00001111, B10000000, B00000111, B11111111, B00000000, B00000000, B00000001, B11000000, B00000000, B00000000, B00000000, 
  B00000000, B00000001, B11100000, B00000000, B11100000, B00011111, B00000000, B00000011, B11111111, B00000000, B00000000, B00000001, B11000000, B00000000, B00000000, B00000000, 
  B00000000, B00000000, B11110000, B00000000, B00000000, B11111110, B00000000, B00000000, B11111110, B00000000, B00000000, B00000001, B11000000, B00000000, B00000000, B00000000, 
  B00000000, B00000000, B11110010, B00000000, B00000001, B11111100, B00000000, B00000000, B00000000, B00000000, B00000000, B00000001, B11000000, B00000000, B00000000, B00000000, 
  B00000000, B00000000, B01111111, B00000000, B00000001, B11111000, B00000000, B00000000, B00000000, B01000000, B00000000, B00000001, B11000000, B00000000, B00000000, B00000000, 
  B00000000, B00000000, B00111111, B00000000, B00000001, B11000000, B00000000, B00000000, B00000000, B11111000, B00000000, B01111111, B11000000, B00000000, B00000000, B00000000, 
  B00000000, B00000000, B00011111, B10000000, B00000001, B11000000, B00000000, B00000000, B00000000, B11111100, B00000000, B11111111, B11000000, B00000000, B00000000, B00000000, 
  B00000000, B00000000, B00000011, B10000000, B00000001, B11100000, B00000000, B00000000, B00000000, B01111110, B00000000, B11111111, B10000000, B00000000, B00000000, B00000000, 
  B00000000, B00000000, B00000011, B10000000, B00000000, B11110001, B11111100, B00000000, B00000000, B00001110, B00000000, B11100000, B00000000, B00000000, B00000000, B00000000, 
  B00000000, B00000000, B00000011, B11000000, B00000000, B01111111, B11111110, B00000000, B00001110, B00001110, B00000001, B11100000, B00000000, B00000000, B00000000, B00000000, 
  B00000000, B00000000, B00000001, B11000000, B00000000, B00111111, B11111110, B00000000, B00111111, B00001110, B00000001, B11100000, B00000000, B00000000, B00000000, B00000000, 
  B00000000, B00000000, B00000001, B11000000, B00000000, B00011111, B10001111, B00000000, B01111111, B00001110, B00000011, B11000000, B00000000, B00000000, B00000000, B00000000, 
  B00000000, B00000000, B00000001, B11000000, B00000000, B00000000, B00000111, B00000001, B11111000, B00001110, B00000011, B11000000, B00000000, B00000000, B00000000, B00000000, 
  B00000000, B00000000, B00000001, B11100000, B00000001, B11000000, B00000011, B00000111, B11110000, B00001110, B00000111, B10000000, B00000000, B00000000, B00000000, B00000000, 
  B00000000, B00000000, B00000000, B11100000, B00000011, B11111111, B10000000, B00111111, B11000000, B00011110, B00000111, B10000000, B00000000, B00000000, B00000000, B00000000, 
  B00000000, B00000000, B00000000, B11100000, B00000001, B11111111, B11111111, B11111111, B10000000, B00111110, B00001111, B00000000, B00000000, B00000000, B00000000, B00000000, 
  B00000000, B00000000, B00000000, B11110000, B00000000, B01111111, B11111111, B11111110, B00000000, B01111100, B00011111, B00000000, B00000000, B00000000, B00000000, B00000000, 
  B00000000, B00000000, B00000000, B01110000, B00000000, B00000000, B11111111, B11100000, B00000000, B00111000, B00111110, B00000000, B00000000, B00000000, B00000000, B00000000, 
  B00000000, B00000000, B00000000, B01111100, B00000000, B00000000, B00000000, B00000000, B00000000, B00000000, B00111100, B00000000, B00000000, B00000000, B00000000, B00000000, 
  B00000000, B00000000, B00000000, B00111110, B00000000, B00000000, B00000000, B00000000, B00000000, B00000000, B00011000, B00000000, B00000000, B00000000, B00000000, B00000000, 
};

static const unsigned char PROGMEM Logo2[] = {
  B00000000, B00000000, B00000000, B00000000, B00000000, B00111100, B00000000, B00000000, B00000000, B00000111, B00000000, B00000000, B00000000, B00000000, B00000000, B00000000, 
  B00000000, B00000000, B00000000, B00000000, B00000000, B00111000, B00000000, B00000000, B00000000, B00000111, B00000000, B00000000, B00000000, B00000000, B00000000, B00000000, 
  B00000000, B00000000, B00000000, B00000000, B00000000, B01110000, B00000000, B00000000, B00000000, B00000111, B00000000, B00000000, B00000000, B00000000, B00000000, B00000000, 
  B00000000, B00000000, B00000000, B00000000, B00000001, B11110000, B00000000, B00000000, B00000000, B00001111, B00000000, B00000000, B00000000, B00000000, B00000000, B00000000, 
  B00000000, B00000000, B00000000, B00000000, B00000011, B11000000, B00000000, B00000000, B00000000, B00001111, B00000000, B00000000, B00000000, B00000000, B00000000, B00000000, 
  B00000000, B00000000, B00000000, B00000000, B00000111, B11000000, B00000000, B00000000, B00000000, B00011110, B00000000, B00000000, B00000000, B00000000, B00000000, B00000000, 
  B00000000, B00000000, B00000000, B00000000, B00001111, B11000000, B00000000, B00000000, B00000000, B00011110, B00000000, B00000000, B00000000, B00000000, B00000000, B00000000, 
  B00000000, B00000000, B00000000, B00000000, B00111111, B10000000, B00000000, B00000100, B00000000, B00011110, B00000000, B00000000, B00000000, B00000000, B00000000, B00000000, 
  B00000000, B00000000, B00000000, B00000000, B01111111, B10000000, B00000000, B00001000, B00000000, B00111100, B00000000, B10000000, B00000000, B00000000, B00000000, B00000000, 
  B00000000, B00000000, B00000000, B00000000, B11111111, B00000000, B00000000, B00010000, B00000000, B00111100, B00000000, B11000000, B00000000, B00000000, B00000000, B00000000, 
  B00000000, B00000000, B00000000, B00000011, B11111110, B00000000, B00000000, B00010000, B00000000, B00111100, B00000000, B11000000, B00000000, B00000000, B00000000, B00000000, 
  B00000000, B00000000, B00000000, B00001111, B11111110, B00000000, B00000000, B00100000, B00000000, B01111110, B00000000, B11000000, B00000000, B00000000, B00000000, B00000000, 
  B00000000, B00000000, B00000000, B00011111, B11111110, B00000000, B00000000, B01100000, B00000000, B01111110, B00000000, B11000000, B00000000, B00000000, B00000000, B00000000, 
  B00000000, B00000000, B00000000, B00011111, B11111110, B00000000, B00000000, B11100000, B00000001, B11111111, B00000000, B11000000, B00000000, B00000000, B00000000, B00000000, 
  B00000000, B00000000, B00000000, B00111111, B11111110, B00000000, B00000001, B11000000, B00000011, B11111111, B11000000, B10000000, B00000000, B00000000, B00000000, B00000000, 
  B00000000, B00000000, B00000000, B00111111, B11111111, B00000000, B00000001, B11000000, B00000111, B11110111, B11100000, B10000000, B00000000, B00000000, B00000000, B00000000, 
  B00000000, B00000000, B00000000, B01111111, B11011111, B00000000, B00000011, B11000000, B00011111, B11100111, B11110000, B10000000, B00000000, B00000000, B00000000, B00000000, 
  B00000000, B00000000, B00000000, B01111111, B11001111, B10000000, B00000011, B10000000, B00111111, B11110111, B11110000, B10000000, B00000000, B00000000, B00000000, B00000000, 
  B00000000, B00000000, B00000000, B01111111, B11100111, B11000000, B00000011, B10000011, B11111111, B11111111, B11111100, B10000000, B00000000, B00000000, B00000000, B00000000, 
  B00000000, B00000000, B00000000, B01111111, B11110111, B11100000, B00000011, B10001111, B11111111, B11111111, B11111100, B10000000, B00000000, B00000000, B00000000, B00000000, 
  B00000000, B00000000, B00000000, B01111111, B11111111, B11110000, B00000011, B11111111, B11111111, B11111111, B11111111, B00000000, B00000000, B00000000, B00000000, B00000000, 
  B00000000, B00000000, B00000000, B01111111, B11111111, B11111110, B00000011, B11111111, B11111111, B11111111, B11111111, B00000000, B00000000, B00000000, B00000000, B00000000, 
  B00000000, B00000000, B00000000, B01111111, B11111111, B11111111, B11111111, B11111111, B11111111, B11111111, B11111110, B00000000, B00000000, B00000000, B00000000, B00000000, 
  B00000000, B00000000, B00000000, B01111111, B11111111, B11111111, B11111111, B11111111, B11111111, B11111111, B11111110, B00000000, B00000000, B00000000, B00000000, B00000000, 
  B00000000, B00000000, B00000000, B00111111, B11111111, B11111111, B11111111, B11111111, B11111111, B11111111, B11111100, B00000000, B00000000, B00000000, B00000000, B00000000, 
  B00000000, B00000000, B00000000, B00011111, B11111111, B11111111, B11111110, B11111111, B11111111, B11111111, B11111000, B00000000, B00000000, B00000000, B00000000, B00000000, 
  B00000000, B00000000, B00000000, B00011111, B11111111, B11111111, B11111100, B01111011, B11111111, B11111111, B11110000, B00000000, B00000000, B00000000, B00000000, B00000000, 
  B00000000, B00000000, B00000000, B00001111, B11111111, B11111111, B11111000, B00111001, B11111111, B11111111, B11110000, B00000000, B00000000, B00000000, B00000000, B00000000, 
  B00000000, B00000000, B00000000, B00000111, B11111111, B11111111, B11100000, B00011100, B00111111, B11111111, B10000000, B00000000, B00000000, B00000000, B00000000, B00000000, 
  B00000000, B00000000, B00000000, B00000000, B11111111, B11111111, B00000000, B00011111, B11111111, B11111110, B00000000, B00000000, B00000000, B00000000, B00000000, B00000000, 
  B00000000, B00000000, B00000000, B00000000, B01111111, B11110000, B00000000, B00000111, B11111111, B11111000, B00000000, B00000000, B00000000, B00000000, B00000000, B00000000, 
  B00000000, B00000000, B00000000, B00000000, B00000000, B00000000, B00000000, B00000000, B00000000, B00000000, B00000000, B00000000, B00000000, B00000000, B00000000, B00000000, 
};

void setup(){
  Serial.begin(115200);
    for (int thisLed = 0; thisLed < ledCount; thisLed++) {
      pinMode(ledPins[thisLed], OUTPUT);
  }
  Serial.begin(9600);  
    pinMode(0,OUTPUT);
      pinMode(1,OUTPUT);
        pinMode(2,OUTPUT);
          pinMode(3,OUTPUT);
            pinMode(4,OUTPUT);
              pinMode(5,OUTPUT);
                pinMode(6,OUTPUT);
                  pinMode(7,OUTPUT);
  display.begin(SSD1306_SWITCHCAPVCC);
  //display.clearDisplay();
  //display.drawBitmap(23,0,Logo,128,32,WHITE);
  //display.display();
}

void loop()
{
  int fsr_value = analogRead(fsr_pin); // 讀取FSR
  int led_value = map(fsr_value, 0, 1023, 0, 10); // 從0~1023映射到0~10
    for (int thisLed = 0; thisLed < ledCount;thisLed++) {
      if (thisLed < led_value) {
      digitalWrite(ledPins[thisLed], HIGH);
        }
      else {
        digitalWrite(ledPins[thisLed], LOW);
        }
  }
  
    if(led_value >=4 && logo_now != 1){
        logo_now = 1;
        print_1();
      }

      if(led_value >=4 && logo_now != 2){
        logo_now = 2;
        print_2();
      }

      for(int x = 0;x <= 7;x++){
        analogWrite(x, false);
        }
      if(led_value >= 0) analogWrite(0, true);
       if(led_value >= 1) analogWrite(1, true);
        if(led_value >= 2) analogWrite(2, true);
         if(led_value >= 3) analogWrite(3, true);
          if(led_value >= 4) analogWrite(4, true);
           if(led_value >= 5) analogWrite(5, true);
            if(led_value >= 6) analogWrite(6, true);
             if(led_value >= 7) analogWrite(7, true);
             
      Serial.println(fsr_value);
      Serial.println(led_value);
      Serial.println("-------------");
}
void print_1(){
  display.clearDisplay();
  display.drawBitmap(23,0,Logo1,128,32,WHITE);
  display.display();
  }
  
 void print_2(){
  display.clearDisplay();
  display.drawBitmap(23,0,Logo2,128,32,WHITE);
  display.display();
  }

